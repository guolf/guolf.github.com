<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>52dev</title>
    <description>A chinese man, detemined in Android and Python</description>
    <link>http://blog.52dev.net/</link>
    <atom:link href="http://blog.52dev.net/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 26 Mar 2016 12:14:24 +0800</pubDate>
    <lastBuildDate>Sat, 26 Mar 2016 12:14:24 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>nginx反向代理</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;网站部署&lt;/h2&gt;
&lt;p&gt;IIS网站绑定端口801，Tomcat绑定端口8080，将nginx目录下的nginx.conf文件修改内容如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    #access_log  logs/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip  on;
    server {
        listen       80;
        # 绑定域名
        server_name  www.guolingfa.cn;
        location / {
        	# 目标地址
       		proxy_pass   http://localhost:801;
        }
    }
	server {
        listen       80;
        server_name  guolingfa.cn;
        location / {
       		proxy_pass   http://localhost:801;
        }
    }
	server {
        listen       80;
        server_name  test.guolingfa.cn;
        location / {
       		proxy_pass   http://localhost:8080;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;nginx&quot;&gt;启动nginx&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 启动nginx 
start nginx
# 停止nginx
nginx -s stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 25 Mar 2016 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2016/03/25/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2016/03/25/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</guid>
        
        <category>nginx</category>
        
        <category>tomcat</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>mac日常笔记</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;批量转换文件编码&lt;/h2&gt;

&lt;p&gt;cd进入目标文件，执行命令将目录下所有文件转换成UTF-8编码，并保存到指定文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -type f -exec bash -c &#39;iconv -f GB18030 &quot;{}&quot; 1&amp;gt;/dev/null 2&amp;gt;/dev/null &amp;amp;&amp;amp; iconv -f GB18030 -t utf-8 &quot;{}&quot; &amp;gt; /Users/guolf/Documents/workspace/test/src/&quot;{}&quot;&#39; \; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;查找占用端口&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将端口替换成所需,将会出现占用端口进程信息(lsof -i tcp:port)
lsof -i tcp:8080
# 找到占用端口进程pid，使用kill命令杀掉该进程 kill pid
kill 1234
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;viutf-bombom&quot;&gt;使用vi将UTF bom格式转无bom格式&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:set nobomb
:wq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;macapache&quot;&gt;mac自带Apache&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#查看版本
sudo apachectl -v
#启动
sudo apachectl start
#网站目录
open /Library/WebServer/Documents/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;添加文件可执行权限&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod a+x ./文件名
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ntfs-3gmacntfs&quot;&gt;使用ntfs-3g实现mac的ntfs写权限&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Remove osxfuse if installed via homebrew:
&amp;gt; brew uninstall osxfuse
Install osxfuse binary and choose to install the MacFUSE compatibility layer:
http://sourceforge.net/projects/osxfuse/files/latest/download?source=files
Reboot (optional but recommended by osxfuse)
Install ntfs-3g via homebrew:
&amp;gt; brew update &amp;amp;&amp;amp; brew install ntfs-3g

or  try

brew install Caskroom/cask/osxfuse then brew install homebrew/fuse/ntfs-3g

Link mount_ntfs:
&amp;gt; sudo mv /sbin/mount_ntfs /sbin/mount_ntfs.original
&amp;gt; sudo ln -s /usr/local/Cellar/ntfs-3g/2015.3.14/sbin/mount_ntfs /sbin/mount_ntfs
The output of the following should be as below:
&amp;gt; ls -l /sbin/mount_ntfs*
/sbin/mount_ntfs -&amp;gt; /usr/local/Cellar/ntfs-3g/2014.2.15/sbin/mount_ntfs
/sbin/mount_ntfs.original -&amp;gt; /System/Library/Filesystems/ntfs.fs/Contents/Resources/mount_ntfs
Reboot and voila
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 14 Mar 2016 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2016/03/14/mac%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2016/03/14/mac%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</guid>
        
        <category>mac</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Android日常笔记</title>
        <description>&lt;h2 id=&quot;drawableright&quot;&gt;drawableRight添加单击事件&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mTelnum.setOnTouchListener(new View.OnTouchListener() {
	@Override
	public boolean onTouch(View v, MotionEvent event) {
		if(event.getAction()== MotionEvent.ACTION_UP) {
			Drawable drawableRight = ((EditText) v).getCompoundDrawables()[2];
				if (drawableRight != null &amp;amp;&amp;amp; event.getRawX() &amp;gt;= (v.getRight() - drawableRight.getBounds().width())){
					Toast.makeText(TestActivity.this, &quot;click...&quot;, Toast.LENGTH_SHORT).show();
				}
			}
			return false;
		}
});
        
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pullxml&quot;&gt;pull解析xml包含&amp;amp;会报错&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xmlStr.replace(&quot;&amp;amp;&quot;,&quot;&amp;amp;amp;&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;隐藏底部虚拟导航条&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;魅族&lt;/h2&gt;
&lt;p&gt;Flyme OS 4.5.0.2Q版本运行cordova应用，点击下拉菜单会崩溃。将系统版本升级即可。&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Feb 2016 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2016/02/21/Android%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2016/02/21/Android%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</guid>
        
        <category>android</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Android反编译，重新打包</title>
        <description>&lt;h2 id=&quot;android&quot;&gt;Android反编译、重新打包&lt;/h2&gt;

&lt;h3 id=&quot;apktool&quot;&gt;安装apktool&lt;/h3&gt;

&lt;p&gt;参考&lt;a href=&quot;http://ibotpeaches.github.io/Apktool/install/&quot;&gt;http://ibotpeaches.github.io/Apktool/install/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 反编译
$ apktool d testapp.apk
I: Using Apktool 2.0.0 on testapp.apk
I: Loading resource table...
I: Decoding AndroidManifest.xml with resources...
I: Loading resource table from file: 1.apk
I: Regular manifest package...
I: Decoding file-resources...
I: Decoding values */* XMLs...
I: Baksmaling classes.dex...
I: Copying assets and libs...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 反编译修改后重新打包
$ apktool b test
I: Using Apktool 2.0.1 on test
I: Checking whether sources has changed...
I: Smaling smali folder into classes.dex...
I: Checking whether resources has changed...
I: Building resources...
I: Building apk file...
I: Copying unknown files/dir..
# 重新签名
$ jarsigner -keystore /Users/guolf/.android/debug.keystore 
-storepass android -keypass android test.apk androiddebugkey 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;dex2jar&quot;&gt;安装dex2jar&lt;/h3&gt;

&lt;h4 id=&quot;section&quot;&gt;下载安装文件&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/dex2jar/files/&quot;&gt;https://sourceforge.net/projects/dex2jar/files/&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;解压到指定位置&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unzip -x dex2jar-version.zip -d /home/username
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-2&quot;&gt;反编译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将apk反编译成.jar文件，然后可使用jd-gui打开
sh /home/username/dex2jar-2.0/d2j-dex2jar.sh /home/username/someApk.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用jd-gui查看源码，下载地址&lt;a href=&quot;http://jd.benow.ca/&quot;&gt;http://jd.benow.ca/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2015/12/19/android%E5%8F%8D%E7%BC%96%E8%AF%91-%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2015/12/19/android%E5%8F%8D%E7%BC%96%E8%AF%91-%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85/</guid>
        
        <category>android</category>
        
        <category>apktool</category>
        
        <category>dex2jar</category>
        
        <category>jd-gui</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>linux利用ssh key 免密码登陆</title>
        <description>&lt;h2 id=&quot;ssh-keylinux&quot;&gt;利用ssh key验证登陆Linux服务器&lt;/h2&gt;
&lt;p&gt;### 生成SSH Key&lt;/p&gt;

&lt;h4 id=&quot;rsa-key-pair&quot;&gt;创建RSA Key Pair&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;key&quot;&gt;输入key保存位置&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Enter file in which to save the key (/home/demo/.ssh/id_rsa):
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Enter passphrase (empty for no passphrase):
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/demo/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/demo/.ssh/id_rsa.
Your public key has been saved in /home/demo/.ssh/id_rsa.pub.
The key fingerprint is:
4a:dd:0a:c6:35:4e:3f:ed:27:38:8c:74:44:4d:93:67 demo@a
The key&#39;s randomart image is:
+--[ RSA 2048]----+
|          .oo.   |
|         .  o.E  |
|        + .  o   |
|     . = = .     |
|      = S = .    |
|     o + = +     |
|      . o + o .  |
|           . o   |
|                 |
+-----------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;#### 将生成的id_rsa.pub拷贝到服务器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -p 1234 /home/demo/.ssh/id_rsa.pub root@server:/root/.ssh/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将id_rsa.pub重命名成authorized_keys&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd .ssh
mv id_rsa.pub authorized_keys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;#### 修改本机的ssh config
config文件位于&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.ssh/config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host myvps
Hostname 104.XX.XXX.XX
Port 1234
User root
IdentityFile ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然后直接 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh myvps&lt;/code&gt; 即可连接上远程服务器。&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2015/08/26/ssh-key-login/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2015/08/26/ssh-key-login/</guid>
        
        <category>linux</category>
        
        <category>ssh</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>AOP框架Dexposed使用详解</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;典型的使用场景&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;AOP编程&lt;/li&gt;
  &lt;li&gt;插桩（例如测试，性能监控等）&lt;/li&gt;
  &lt;li&gt;在线热更新，修复严重的，紧急的或者安全性的bug&lt;/li&gt;
  &lt;li&gt;SDK hooking以提供更好的开发体验&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;如何集成&lt;/h2&gt;

&lt;p&gt;集成方式很简单，直接dexposed aar添加到您的项目作为编译库，它包含了从“dexposed”目录中的jar文件“dexposedbridge.jar”和两个so文件“libdexposed.so libdexposed_l.so”。Gradle依赖如下所示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dependencies {
	compile &#39;com.taobao.android:dexposed:0.1.1@aar&#39;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在应用启动时进行初始化&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class MyApplication extends Application {

	private boolean mIsSupported = false; // 设备是否支持dexposed
    private boolean mIsLDevice = false;  // 设备Android系统是否是Android 5.0及以上

    @Override public void onCreate() {    
     super.onCreate();    
        // Check whether current device is supported (also initialize Dexposed framework if not yet)
        mIsSupported = DexposedBridge.canDexposed(this);
    	mIsLDevice = Build.VERSION.SDK_INT &amp;gt;= 21;
    }
    public boolean isSupported() {
    return mIsSupported;
	}

    public boolean isLDevice() {
        return mIsLDevice;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;基本用法&lt;/h2&gt;

&lt;p&gt;对于某个函数而言，有三个注入点可供选择：函数执行前注入（before），函数执行后注入（after），替换函数执行的代码段（replace）。
例子1：应用中所有的Activity.onCreate(Bundle)函数调用之前和之后增加一些相同的处理：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Target class, method with parameter types, followed by the hook callback (XC_MethodHook).
DexposedBridge.findAndHookMethod(Activity.class, &quot;onCreate&quot;, Bundle.class, new XC_MethodHook() {

    // To be invoked before Activity.onCreate().
    @Override protected void beforeHookedMethod(MethodHookParam param) throws Throwable {
            // &quot;thisObject&quot; keeps the reference to the instance of target class.
            Activity instance = (Activity) param.thisObject;

            // The array args include all the parameters.
            Bundle bundle = (Bundle) param.args[0];
            Intent intent = new Intent();
            // XposedHelpers provide useful utility methods.
            XposedHelpers.setObjectField(param.thisObject, &quot;mIntent&quot;, intent);

            // Calling setResult() will bypass the original method body use the result as method return value directly.
            if (bundle.containsKey(&quot;return&quot;))
                param.setResult(null);
        }

        // To be invoked after Activity.onCreate()
        @Override protected void afterHookedMethod(MethodHookParam param) throws Throwable {
            XposedHelpers.callMethod(param.thisObject, &quot;sampleMethod&quot;, 2);
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;例子2：在线热更新
我们假设宿主apk的MainActivity.showDialog函数出现问题，需要打补丁，宿主代码如下所示：（类完整路径是:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package com.taobao.dexposed;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

import com.taobao.android.dexposed.XC_MethodHook;
import com.taobao.android.dexposed.DexposedBridge;
import com.taobao.patch.PatchMain;
import com.taobao.patch.PatchResult;

import java.io.File;


public class MainActivity extends Activity {

	private boolean isSupport = false;

    private boolean isLDevice= false;
	
	private TextView mLogContent;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		mLogContent = (TextView) (this.findViewById(R.id.log_content));
		// check device if support and auto load libs
        isSupport = DexposedBridge.canDexposed(this);
        isLDevice = android.os.Build.VERSION.SDK_INT == 21;
	}

	//Hook system log click
	public void hookSystemLog(View view) {
		if (isSupport) {
			DexposedBridge.findAndHookMethod(isLDevice ? this.getClass(): Log.class, isLDevice ? &quot;showLog&quot; : &quot;d&quot;, String.class, String.class, new XC_MethodHook() {
				@Override
				protected void afterHookedMethod(MethodHookParam arg0) throws Throwable {
					String tag = (String) arg0.args[0];
					String msg = (String) arg0.args[1];
					mLogContent.setText(tag + &quot;,&quot; + msg);
				}
			});
            if (isLDevice) {
                showLog(&quot;dexposed&quot;, &quot;It doesn&#39;t support AOP to system method on ART devices&quot;);
            } else {
                Log.d(&quot;dexposed&quot;, &quot;Logs are redirected to display here&quot;);
            }
		} else {
			mLogContent.setText(&quot;This device doesn&#39;t support dexposed!&quot;);
		}
	}

    private void showLog(String tag, String msg) {
        Log.d(tag, msg);
    }
	
	// Hook choreographer click
	public void hookChoreographer(View view) {
		Log.d(&quot;dexposed&quot;, &quot;hookChoreographer button clicked.&quot;);
		if (isSupport &amp;amp;&amp;amp; !isLDevice) {
			ChoreographerHook.instance().start();
		} else {
			showLog(&quot;dexposed&quot;, &quot;This device doesn&#39;t support this!&quot;);
		}
	}
	
	// Run patch apk
	public void runPatchApk(View view) {
		Log.d(&quot;dexposed&quot;, &quot;runPatchApk button clicked.&quot;);
        if (isLDevice) {
            showLog(&quot;dexposed&quot;, &quot;It doesn&#39;t support this function on L device.&quot;);
            return;
        }
        if (!isSupport) {
			Log.d(&quot;dexposed&quot;, &quot;This device doesn&#39;t support dexposed!&quot;);
			return;
		}
		File cacheDir = getExternalCacheDir();
    	if(cacheDir != null){
    		String fullpath = cacheDir.getAbsolutePath() + File.separator + &quot;patch.apk&quot;;
    		PatchResult result = PatchMain.load(this, fullpath, null);
    		if (result.isSuccess()) {
    			Log.e(&quot;Hotpatch&quot;, &quot;patch success!&quot;);
    		} else {
    			Log.e(&quot;Hotpatch&quot;, &quot;patch error is &quot; + result.getErrorInfo());
    		}
    	}
    	showDialog();
	}
	
	private void showDialog() {
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		builder.setTitle(&quot;Dexposed sample&quot;)
				.setMessage(
						&quot;Please clone patchsample project to generate apk, and copy it to \&quot;/Android/data/com.taobao.dexposed/cache/patch.apk\&quot;&quot;)
				.setPositiveButton(&quot;ok&quot;, new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
					}
				}).create().show();
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;补丁apk只有一个名为DialogPatch的类，实现了patchloader函数库中的IPatch接口，IPatch接口代码如下所示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package com.taobao.patch;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;

import com.taobao.android.dexposed.XC_MethodReplacement;
import com.taobao.android.dexposed.DexposedBridge;

public class DialogPatch implements IPatch {

	@Override
	public void handlePatch(final PatchParam arg0) throws Throwable {    	
    	Class&amp;lt;?&amp;gt; cls = null;
		try {
			cls= arg0.context.getClassLoader()
					.loadClass(&quot;com.taobao.dexposed.MainActivity&quot;);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
			return;
		}     	
     	DexposedBridge.findAndHookMethod(cls, &quot;showDialog&quot;,
				new XC_MethodReplacement() {
			@Override
			protected Object replaceHookedMethod(MethodHookParam param) throws Throwable {
				Activity mainActivity = (Activity) param.thisObject;
				AlertDialog.Builder builder = new AlertDialog.Builder(mainActivity);
				builder.setTitle(&quot;Dexposed sample&quot;)
						.setMessage(&quot;The dialog is shown from patch apk!&quot;)
						.setPositiveButton(&quot;ok&quot;, new DialogInterface.OnClickListener() {
							public void onClick(DialogInterface dialog, int whichButton) {
							}
						}).create().show();
				return null;                 
			}
		});
	} 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将补丁打包成apk,通过adb push到/Android/data/com.taobao.dexposed/cache/patch.apk,点击runPatchApk即可看到弹出的内容为补丁的内容。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb push patch.apk /sdcard/Android/data/com.taobao.dexposed/cache/patch.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;支持的版本&lt;/h2&gt;

&lt;p&gt;Dexposed支持从Android2.3到4.4（除了3.0）的所有dalvid运行时arm架构的设备，稳定性已经经过实践检验。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Runtime&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Android Version&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Support&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Dalvik&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Not Test&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Dalvik&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.3&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Dalvik&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Dalvik&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.0-4.4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ART&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Testing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ART&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ART&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;M&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Wed, 26 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2015/08/26/AOP%E6%A1%86%E6%9E%B6Dexposed%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2015/08/26/AOP%E6%A1%86%E6%9E%B6Dexposed%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</guid>
        
        <category>android</category>
        
        <category>aop</category>
        
        <category>dexposed</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>利用Github + Jekyll 搭建个人博客</title>
        <description>&lt;h2 id=&quot;github--jekyll-&quot;&gt;利用Github + Jekyll 搭建个人博客&lt;/h2&gt;

&lt;p&gt;我写这篇文章的目的是记录本博客的搭建过程，自己从零开始逐步搭建起来了GitHub Pages，其中借鉴了很多的博客和模版，稍后会在后面列出，也为没有用过gihub和jekyll的童鞋提供一点帮助。&lt;/p&gt;

&lt;p&gt;学习使用github网页的最好办法就是clone别人的代码，看懂他们的代码，并修改成自己喜欢的样子。这篇文章介绍了windows下从最初安装软件到使用的过程。&lt;/p&gt;

&lt;p&gt;下面开始一步步讲解Github Pages的使用流程：&lt;/p&gt;

&lt;h2 id=&quot;windowsruby&quot;&gt;在windows下安装ruby环境&lt;/h2&gt;

&lt;h3 id=&quot;rubyinstaller-for-windowshttprubyinstallerorgdownloads&quot;&gt;1). 下载并安装 &lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller for Windows&lt;/a&gt;。&lt;/h3&gt;
&lt;p&gt;版本可以选择2.0或者1.9.3都可以。&lt;/p&gt;

&lt;p&gt;双击安装，安装时选中“Add Ruby executables to your PATH”前的框将ruby添加到环境变量中。&lt;/p&gt;

&lt;p&gt;安装完成后，在 Windows 命令行窗口中执行以下命令，检查ruby是否已经加到PATH中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;devkit-&quot;&gt;2). 安装 DevKit 。&lt;/h3&gt;

&lt;p&gt;请根据主页上的描述下载对应的DevKit版本，下载后直接解压到没有空格的路径（例如 E:\DevKit)，然后在Windows的命令行窗口中执行以下命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby dk.rb init 
ruby dk.rb install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jekyll&quot;&gt;3). 安装Jekyll和相关的包。&lt;/h3&gt;

&lt;p&gt;由于国内网络原因（你懂的），导致 rubygems.org 存放在 Amazon S3 上面的资源文件间歇性连接失败。解决方案是使用淘宝的 RubyGems 镜像，它是一个完整 rubygems.org 镜像，你可以用此代替官方版本，同步频率目前为15分钟一次以保证尽量与官方服务同步。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem sources --remove https://rubygems.org/
gem sources -a https://ruby.taobao.org/
gem sources -l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装完成Ruby和DevKit 后继续安装jekyll，执行如下命令安装：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;等待安装完成即可。&lt;/p&gt;

&lt;h2 id=&quot;git&quot;&gt;创建git版本库&lt;/h2&gt;

&lt;p&gt;登录到自己的Github账户，选择New repository，Project Name命名为：”你的用户名”.github.com，例如我的就叫“guolf.github.com”。&lt;/p&gt;

&lt;p&gt;完成后在本地克隆jekyll-bootstrap模版，运行命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将jekyll-bootstrap模版克隆到本地USERNAME.github.com文件夹下。&lt;/p&gt;

&lt;p&gt;然后cd到文件夹内运行命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;成功后打开浏览器输入地址：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt; 即可浏览本地生成的页面。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;绑定域名&lt;/h2&gt;

&lt;p&gt;创建CNAME文件，内容是你的域名。比如： guolf.com
登录域名DNS解析页面，如果是绑定顶级域名，则增加一条A记录，指向[username].github.io所对应的IP。可通过ping命令获得。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\User&amp;gt;ping guolf.github.io
正在 Ping github.map.fastly.net [103.245.222.133] 具有 32 字节的数据:
来自 103.245.222.133 的回复: 字节=32 时间=64ms TTL=49
来自 103.245.222.133 的回复: 字节=32 时间=65ms TTL=49
来自 103.245.222.133 的回复: 字节=32 时间=63ms TTL=49
来自 103.245.222.133 的回复: 字节=32 时间=63ms TTL=49
103.245.222.133 的 Ping 统计信息:
    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，
往返行程的估计时间(以毫秒为单位):
    最短 = 63ms，最长 = 65ms，平均 = 63ms
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;通过上述可得知，guolf.github.io所对应的Ip为103.245.222.133。&lt;/p&gt;

&lt;p&gt;增加两条A记录，@、WWW  均指向103.245.222.133&lt;/p&gt;

&lt;p&gt;如果是二级域名，通过增加解析CNAME记录.
CNAME文件内容为blog.52dev.net
增加一条CNAME记录，主机记录填写blog,记录值填写&lt;code class=&quot;highlighter-rouge&quot;&gt;guolf.github.io&lt;/code&gt;即可。&lt;/p&gt;

</description>
        <pubDate>Tue, 03 Feb 2015 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2015/02/03/%E5%88%A9%E7%94%A8Github-+-Jekyll-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2015/02/03/%E5%88%A9%E7%94%A8Github-+-Jekyll-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
        
        <category>github</category>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>ssh文件上传下载</title>
        <description>&lt;h4 id=&quot;section&quot;&gt;下载文件和目录&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 从服务下载文件
scp username@servername:/remote/filename /local/dir/
# 从服务器下载整个目录
scp -r username@servername:/remote/dir/ /local/dir/
# 非默认端口下载文件
scp -P 29308 username@servername:/remote/filename /local/dir/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;上传文件和目录&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 上传指定文件到服务器
scp /local/filename username@servername:/remote/dir
# 上传目录到服务器
scp  -r /local/dir username@servername:/remote/dir
# 非默认端口上传文件
scp -P 13122 /local/filename username@servername:/remote/dir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;仅作记录.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Nov 2014 00:00:00 +0800</pubDate>
        <link>http://blog.52dev.net/blog/2014/11/21/ssh-upload-download-file/</link>
        <guid isPermaLink="true">http://blog.52dev.net/blog/2014/11/21/ssh-upload-download-file/</guid>
        
        <category>linux</category>
        
        <category>ssh</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
